"use strict";(self.webpackChunk_inversifyjs_framework_docs_site=self.webpackChunk_inversifyjs_framework_docs_site||[]).push([["6863"],{867:function(r,e,n){n.r(e),n.d(e,{metadata:()=>t,default:()=>f,frontMatter:()=>c,contentTitle:()=>d,toc:()=>h,assets:()=>u});var t=JSON.parse('{"id":"fundamentals/error-filter","title":"Error Filter","description":"Error filters allow you to catch and process errors that occur during request handling. They provide a centralized way to transform application errors into appropriate HTTP responses, keeping your controllers clean and focused on business logic.","source":"@site/docs/fundamentals/error-filter.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/error-filter","permalink":"/framework/docs/fundamentals/error-filter","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Error Filter"},"sidebar":"httpSidebar","previous":{"title":"Controller","permalink":"/framework/docs/fundamentals/controller"},"next":{"title":"Guard","permalink":"/framework/docs/fundamentals/guard"}}'),s=n(6820),o=n(7588),l=n(5144),i=n(1323),a=n(818);let c={sidebar_position:2,title:"Error Filter"},d="Error Filter",u={},h=[{value:"How Error Filters Work",id:"how-error-filters-work",level:2},{value:"Basic Example",id:"basic-example",level:2},{value:"Custom Error",id:"custom-error",level:3},{value:"Error Filter",id:"error-filter-1",level:3},{value:"Controller",id:"controller",level:3},{value:"Returning responses from error filters",id:"returning-responses-from-error-filters",level:2},{value:"Examples by Adapter",id:"examples-by-adapter",level:3},{value:"Attaching error filters",id:"attaching-error-filters",level:2}];function p(r){let e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...r.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"error-filter",children:"Error Filter"})}),"\n",(0,s.jsx)(e.p,{children:"Error filters allow you to catch and process errors that occur during request handling. They provide a centralized way to transform application errors into appropriate HTTP responses, keeping your controllers clean and focused on business logic."}),"\n",(0,s.jsx)(e.admonition,{title:"Error filter and injectable decorators",type:"info",children:(0,s.jsxs)(e.p,{children:["You don't need to add ",(0,s.jsx)(e.code,{children:"@injectable()"}),". The ",(0,s.jsx)(e.code,{children:"@CatchError()"})," decorator already applies it for you."]})}),"\n",(0,s.jsx)(e.h2,{id:"how-error-filters-work",children:"How Error Filters Work"}),"\n",(0,s.jsxs)(e.p,{children:["Error filters are classes that implement the ",(0,s.jsx)(e.code,{children:"ErrorFilter"})," interface and are decorated with ",(0,s.jsx)(e.code,{children:"@CatchError()"}),". When an error occurs during request processing, Inversify HTTP looks for error filters that can handle that specific error type and delegates the error handling to them."]}),"\n",(0,s.jsx)(e.p,{children:"The error filter can then:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Transform the error into an appropriate HTTP response"}),"\n",(0,s.jsx)(e.li,{children:"Log the error for debugging purposes"}),"\n",(0,s.jsx)(e.li,{children:"Add context or sanitize error messages"}),"\n",(0,s.jsx)(e.li,{children:"Return custom error responses based on the error type"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"basic-example",children:"Basic Example"}),"\n",(0,s.jsx)(e.p,{children:"Here's a complete example showing how to create a custom error, an error filter to handle it, and a controller that uses the error filter:"}),"\n",(0,s.jsx)(e.h3,{id:"custom-error",children:"Custom Error"}),"\n",(0,s.jsx)(e.p,{children:"First, create a custom error class:"}),"\n",(0,s.jsx)(l.A,{language:"ts",children:"export class InvalidOperationError extends Error {\n  constructor(message: string = 'Invalid operation', options?: ErrorOptions) {\n    super(`[InvalidOperationError]: ${message}`, options);\n  }\n}"}),"\n",(0,s.jsx)(e.h3,{id:"error-filter-1",children:"Error Filter"}),"\n",(0,s.jsx)(e.p,{children:"Create an error filter that catches the custom error and returns an appropriate HTTP response:"}),"\n",(0,s.jsx)(l.A,{language:"ts",children:"@CatchError(InvalidOperationError)\nexport class InvalidOperationErrorFilter\n  implements ErrorFilter<InvalidOperationError>\n{\n  public catch(error: InvalidOperationError): void {\n    throw new UnprocessableEntityHttpResponse(\n      { message: error.message },\n      error.message,\n      {\n        cause: error,\n      },\n    );\n  }\n}"}),"\n",(0,s.jsx)(e.admonition,{title:"universal error filter and infinite loops",type:"warning",children:(0,s.jsxs)(e.p,{children:["When creating a universal error filter (one that catches anything), be cautious about throwing ",(0,s.jsx)(e.code,{children:"HttpResponse"})," errors from within the filter. This can lead to infinite loops if the filter catches its own thrown errors. Instead, consider returning the response directly."]})}),"\n",(0,s.jsx)(e.h3,{id:"controller",children:"Controller"}),"\n",(0,s.jsxs)(e.p,{children:["Apply the error filter to a controller using the ",(0,s.jsx)(e.code,{children:"@UseErrorFilter()"})," decorator:"]}),"\n",(0,s.jsx)(l.A,{language:"ts",children:"@Controller('/products')\n@UseErrorFilter(InvalidOperationErrorFilter)\nexport class ProductController {\n  @Get('/:id/validate')\n  public async validateProduct(): Promise<void> {\n    throw new InvalidOperationError('Product validation failed');\n  }\n}"}),"\n",(0,s.jsx)(e.h2,{id:"returning-responses-from-error-filters",children:"Returning responses from error filters"}),"\n",(0,s.jsx)(e.p,{children:"Error filters can directly manipulate the HTTP response using the adapter-specific request and response objects. This approach is particularly useful for global error filters that need to handle all types of errors without causing infinite loops."}),"\n",(0,s.jsx)(e.h3,{id:"examples-by-adapter",children:"Examples by Adapter"}),"\n",(0,s.jsxs)(i.A,{groupId:"adapter",children:[(0,s.jsx)(a.A,{value:"express",label:"Express 5",children:(0,s.jsx)(l.A,{language:"ts",children:"@CatchError()\nexport class GlobalErrorFilter implements ExpressErrorFilter {\n  readonly #logger: Logger;\n\n  constructor() {\n    this.#logger = new ConsoleLogger('GlobalErrorFilter');\n  }\n\n  public catch(\n    err: unknown,\n    _request: express.Request,\n    response: express.Response,\n  ): void {\n    if (isHttpResponse(err)) {\n      this.#logger.http(\n        `HttpResponse error: ${JSON.stringify(err, Object.getOwnPropertyNames(err))}`,\n      );\n\n      response.status(err.statusCode).send(err.body);\n\n      return;\n    }\n\n    this.#logger.error(\n      `Unhandled error: ${JSON.stringify(err, Object.getOwnPropertyNames(err))}`,\n    );\n\n    const internalServerErrorStatusCode: number = 500;\n\n    response.status(internalServerErrorStatusCode).send({\n      error: 'Internal Server Error',\n      message: 'Unhandled error',\n      statusCode: internalServerErrorStatusCode,\n    });\n  }\n}"})}),(0,s.jsx)(a.A,{value:"express4",label:"Express 4",children:(0,s.jsx)(l.A,{language:"ts",children:"@CatchError()\nexport class GlobalErrorFilter implements ExpressErrorFilter {\n  readonly #logger: Logger;\n\n  constructor() {\n    this.#logger = new ConsoleLogger('GlobalErrorFilter');\n  }\n\n  public catch(\n    err: unknown,\n    _request: express4.Request,\n    response: express4.Response,\n  ): void {\n    if (isHttpResponse(err)) {\n      this.#logger.http(\n        `HttpResponse error: ${JSON.stringify(err, Object.getOwnPropertyNames(err))}`,\n      );\n\n      response.status(err.statusCode).send(err.body);\n\n      return;\n    }\n\n    this.#logger.error(\n      `Unhandled error: ${JSON.stringify(err, Object.getOwnPropertyNames(err))}`,\n    );\n\n    const internalServerErrorStatusCode: number = 500;\n\n    response.status(internalServerErrorStatusCode).send({\n      error: 'Internal Server Error',\n      message: 'Unhandled error',\n      statusCode: internalServerErrorStatusCode,\n    });\n  }\n}"})}),(0,s.jsx)(a.A,{value:"fastify",label:"Fastify",children:(0,s.jsx)(l.A,{language:"ts",children:"@CatchError()\nexport class GlobalErrorFilter implements FastifyErrorFilter {\n  readonly #logger: Logger;\n\n  constructor() {\n    this.#logger = new ConsoleLogger('GlobalErrorFilter');\n  }\n\n  public async catch(\n    err: unknown,\n    _request: FastifyRequest,\n    reply: FastifyReply,\n  ): Promise<void> {\n    if (isHttpResponse(err)) {\n      this.#logger.http(\n        `HttpResponse error: ${JSON.stringify(err, Object.getOwnPropertyNames(err))}`,\n      );\n\n      void reply.status(err.statusCode).send(err.body);\n\n      return;\n    }\n\n    this.#logger.error(\n      `Unhandled error: ${JSON.stringify(err, Object.getOwnPropertyNames(err))}`,\n    );\n\n    const internalServerErrorStatusCode: number = 500;\n\n    void reply.status(internalServerErrorStatusCode).send({\n      error: 'Internal Server Error',\n      message: 'Unhandled error',\n      statusCode: internalServerErrorStatusCode,\n    });\n  }\n}"})}),(0,s.jsx)(a.A,{value:"hono",label:"Hono",children:(0,s.jsx)(l.A,{language:"ts",children:"@CatchError()\nexport class GlobalErrorFilter implements HonoErrorFilter {\n  readonly #logger: Logger;\n\n  constructor() {\n    this.#logger = new ConsoleLogger('GlobalErrorFilter');\n  }\n\n  public catch(\n    err: unknown,\n    _request: HonoRequest,\n    context: Context,\n  ): Response | undefined {\n    if (isHttpResponse(err)) {\n      this.#logger.http(\n        `HttpResponse error: ${JSON.stringify(err, Object.getOwnPropertyNames(err))}`,\n      );\n\n      return context.json(err.body, err.statusCode as ContentfulStatusCode);\n    }\n\n    this.#logger.error(\n      `Unhandled error: ${JSON.stringify(err, Object.getOwnPropertyNames(err))}`,\n    );\n\n    const internalServerErrorStatusCode: ContentfulStatusCode = 500;\n\n    return context.json(\n      {\n        error: 'Internal Server Error',\n        message: 'Unhandled error',\n        statusCode: internalServerErrorStatusCode,\n      },\n      internalServerErrorStatusCode,\n    );\n  }\n}"})})]}),"\n",(0,s.jsx)(e.p,{children:"In these examples:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["The error filter implements the adapter-specific ",(0,s.jsx)(e.code,{children:"ErrorFilter"})," type (e.g., ",(0,s.jsx)(e.code,{children:"ExpressErrorFilter"}),", ",(0,s.jsx)(e.code,{children:"FastifyErrorFilter"}),")"]}),"\n",(0,s.jsxs)(e.li,{children:["A logger is instantiated using ",(0,s.jsx)(e.code,{children:"ConsoleLogger"})," from ",(0,s.jsx)(e.code,{children:"@inversifyjs/logger"})," to log errors"]}),"\n",(0,s.jsxs)(e.li,{children:["The ",(0,s.jsx)(e.code,{children:"isHttpResponse()"})," utility checks if the caught error is an ",(0,s.jsx)(e.code,{children:"HttpResponse"})," instance"]}),"\n",(0,s.jsxs)(e.li,{children:["If it's an ",(0,s.jsx)(e.code,{children:"HttpResponse"}),", the filter logs it with ",(0,s.jsx)(e.code,{children:".http()"})," level and sends the response with the original status code and body"]}),"\n",(0,s.jsxs)(e.li,{children:["For generic errors, the filter logs them with ",(0,s.jsx)(e.code,{children:".error()"})," level using ",(0,s.jsx)(e.code,{children:"JSON.stringify(err, Object.getOwnPropertyNames(err))"})," to properly serialize the error (see ",(0,s.jsx)(e.a,{href:"https://stackoverflow.com/a/26199752/7895659",children:"why this is necessary"}),")"]}),"\n",(0,s.jsx)(e.li,{children:"The filter returns a 500 Internal Server Error response for generic errors"}),"\n",(0,s.jsxs)(e.li,{children:["The filter is registered globally using ",(0,s.jsx)(e.code,{children:"adapter.useGlobalFilters(GlobalErrorFilter)"})]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"This pattern ensures that:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"HttpResponse"})," errors (like ",(0,s.jsx)(e.code,{children:"NotFoundHttpResponse"}),", ",(0,s.jsx)(e.code,{children:"InternalServerErrorHttpResponse"}),") are handled without infinite loops"]}),"\n",(0,s.jsx)(e.li,{children:"Generic JavaScript errors are caught, logged, and transformed into proper HTTP responses"}),"\n",(0,s.jsx)(e.li,{children:"Error details are properly serialized for logging (Error objects have non-enumerable properties that require special handling)"}),"\n",(0,s.jsx)(e.li,{children:"Error handling and logging are centralized and consistent across your application"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"attaching-error-filters",children:"Attaching error filters"}),"\n",(0,s.jsxs)(e.p,{children:["Use the ",(0,s.jsx)(e.a,{href:"../../api/decorators#useerrorfilter",children:"UseErrorFilter"})," decorator at the controller level (applies to all routes) or at the method level (applies to one route)."]}),"\n",(0,s.jsxs)(e.p,{children:["Global error filters can be registered using the ",(0,s.jsx)(e.a,{href:"../../api/inversify-http-adapter#useglobalfilters",children:"InversifyHttpAdapter"}),"."]})]})}function f(r={}){let{wrapper:e}={...(0,o.R)(),...r.components};return e?(0,s.jsx)(e,{...r,children:(0,s.jsx)(p,{...r})}):p(r)}},818:function(r,e,n){n.d(e,{A:()=>o});var t=n(6820);n(5080);var s=n(929);function o({children:r,hidden:e,className:n}){return(0,t.jsx)("div",{role:"tabpanel",className:(0,s.A)("tabItem_AhtS",n),hidden:e,children:r})}},1323:function(r,e,n){n.d(e,{A:()=>j});var t=n(6820),s=n(5080),o=n(929),l=n(5907),i=n(8428),a=n(3357),c=n(8437),d=n(1817),u=n(998),h=n(8482);function p(r){return s.Children.toArray(r).filter(r=>"\n"!==r).map(r=>{if(!r||(0,s.isValidElement)(r)&&function(r){let{props:e}=r;return!!e&&"object"==typeof e&&"value"in e}(r))return r;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof r.type?r.type:r.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function f({value:r,tabValues:e}){return e.some(e=>e.value===r)}var g=n(4791);function m({className:r,block:e,selectedValue:n,selectValue:s,tabValues:l}){let a=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=r=>{let e=r.currentTarget,t=l[a.indexOf(e)].value;t!==n&&(c(e),s(t))},u=r=>{let e=null;switch(r.key){case"Enter":d(r);break;case"ArrowRight":{let n=a.indexOf(r.currentTarget)+1;e=a[n]??a[0];break}case"ArrowLeft":{let n=a.indexOf(r.currentTarget)-1;e=a[n]??a[a.length-1]}}e?.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":e},r),children:l.map(({value:r,label:e,attributes:s})=>(0,t.jsx)("li",{role:"tab",tabIndex:n===r?0:-1,"aria-selected":n===r,ref:r=>{a.push(r)},onKeyDown:u,onClick:d,...s,className:(0,o.A)("tabs__item","tabItem_NEq3",s?.className,{"tabs__item--active":n===r}),children:e??r},r))})}function x({lazy:r,children:e,selectedValue:n}){let l=(Array.isArray(e)?e:[e]).filter(Boolean);if(r){let r=l.find(r=>r.props.value===n);return r?(0,s.cloneElement)(r,{className:(0,o.A)("margin-top--md",r.props.className)}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:l.map((r,e)=>(0,s.cloneElement)(r,{key:e,hidden:r.props.value!==n}))})}function v(r){let e=function(r){let e,{defaultValue:n,queryString:t=!1,groupId:o}=r,l=function(r){let{values:e,children:n}=r;return(0,s.useMemo)(()=>{let r=e??p(n).map(({props:{value:r,label:e,attributes:n,default:t}})=>({value:r,label:e,attributes:n,default:t})),t=(0,u.XI)(r,(r,e)=>r.value===e.value);if(t.length>0)throw Error(`Docusaurus error: Duplicate values "${t.map(r=>r.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return r},[e,n])}(r),[i,g]=(0,s.useState)(()=>(function({defaultValue:r,tabValues:e}){if(0===e.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!f({value:r,tabValues:e}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${e.map(r=>r.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}let n=e.find(r=>r.default)??e[0];if(!n)throw Error("Unexpected error: 0 tabValues");return n.value})({defaultValue:n,tabValues:l})),[m,x]=function({queryString:r=!1,groupId:e}){let n=(0,a.W6)(),t=function({queryString:r=!1,groupId:e}){if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!e)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return e??null}({queryString:r,groupId:e});return[(0,d.aZ)(t),(0,s.useCallback)(r=>{if(!t)return;let e=new URLSearchParams(n.location.search);e.set(t,r),n.replace({...n.location,search:e.toString()})},[t,n])]}({queryString:t,groupId:o}),[v,j]=function({groupId:r}){let e=r?`docusaurus.tab.${r}`:null,[n,t]=(0,h.Dv)(e);return[n,(0,s.useCallback)(r=>{e&&t.set(r)},[e,t])]}({groupId:o}),b=f({value:e=m??v,tabValues:l})?e:null;return(0,c.A)(()=>{b&&g(b)},[b]),{selectedValue:i,selectValue:(0,s.useCallback)(r=>{if(!f({value:r,tabValues:l}))throw Error(`Can't select invalid tab value=${r}`);g(r),x(r),j(r)},[x,j,l]),tabValues:l}}(r);return(0,t.jsxs)("div",{className:(0,o.A)(l.G.tabs.container,"tabs-container","tabList_xt8g"),children:[(0,t.jsx)(m,{...e,...r}),(0,t.jsx)(x,{...e,...r})]})}function j(r){let e=(0,g.A)();return(0,t.jsx)(v,{...r,children:p(r.children)},String(e))}}}]);