"use strict";(self.webpackChunk_inversifyjs_framework_docs_site=self.webpackChunk_inversifyjs_framework_docs_site||[]).push([["4962"],{1903:function(e,i,r){r.r(i),r.d(i,{frontMatter:()=>o,toc:()=>d,default:()=>p,metadata:()=>n,assets:()=>l,contentTitle:()=>a});var n=JSON.parse('{"id":"api/swagger-ui-provider","title":"SwaggerUiProvider","description":"The SwaggerUiProvider is an abstract class that generates and provides Swagger UI documentation for your HTTP controllers. It automatically scans your controllers and their OpenAPI metadata to build a complete OpenAPI 3.1 specification and serves it through a Swagger UI interface.","source":"@site/openapi-docs/api/swagger-ui-provider.mdx","sourceDirName":"api","slug":"/api/swagger-ui-provider","permalink":"/framework/openapi/api/swagger-ui-provider","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"SwaggerUiProvider"},"sidebar":"openApiSidebar","previous":{"title":"Decorator","permalink":"/framework/openapi/api/decorators"},"next":{"title":"Extending class schemas","permalink":"/framework/openapi/faq/extending-class-schemas"}}'),s=r(6820),t=r(7588);let o={sidebar_position:2,title:"SwaggerUiProvider"},a="SwaggerUiProvider",l={},d=[{value:"Core Methods",id:"core-methods",level:2},{value:"provide",id:"provide",level:3},{value:"Configuration",id:"configuration",level:2},{value:"SwaggerUiProviderOptions",id:"swaggeruiprovideroptions",level:3},{value:"SwaggerUiProviderApiOptions",id:"swaggeruiproviderapioptions",level:4},{value:"SwaggerUiProviderUiOptions",id:"swaggeruiprovideruioptions",level:4},{value:"Internal Processing",id:"internal-processing",level:2},{value:"Metadata Collection",id:"metadata-collection",level:3},{value:"OpenAPI Specification Building",id:"openapi-specification-building",level:3},{value:"Controller Registration",id:"controller-registration",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Duplicate Operations",id:"duplicate-operations",level:3},{value:"Provision State",id:"provision-state",level:3},{value:"Integration Requirements",id:"integration-requirements",level:2},{value:"Controller Prerequisites",id:"controller-prerequisites",level:3},{value:"Framework Compatibility",id:"framework-compatibility",level:3}];function c(e){let i={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"swaggeruiprovider",children:"SwaggerUiProvider"})}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"SwaggerUiProvider"})," is an abstract class that generates and provides Swagger UI documentation for your HTTP controllers. It automatically scans your controllers and their OpenAPI metadata to build a complete OpenAPI 3.1 specification and serves it through a Swagger UI interface."]}),"\n",(0,s.jsx)(i.h2,{id:"core-methods",children:"Core Methods"}),"\n",(0,s.jsx)(i.h3,{id:"provide",children:"provide"}),"\n",(0,s.jsx)(i.p,{children:"Registers the Swagger UI provider with the dependency injection container and builds the OpenAPI documentation from controller metadata."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:"provide(container: Container): void\n"})}),"\n",(0,s.jsx)(i.p,{children:"Parameters"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"container (Container): The Inversify container instance where controllers are registered."}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Notes"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Scope: Can only be called once per provider instance. Subsequent calls will throw an error."}),"\n",(0,s.jsx)(i.li,{children:"Process: Scans all registered controllers for OpenAPI metadata, builds the complete OpenAPI specification, and registers the Swagger UI controller."}),"\n",(0,s.jsx)(i.li,{children:"Prerequisites: Controllers must be properly registered in the container and have appropriate OpenAPI decorators applied."}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(i.h3,{id:"swaggeruiprovideroptions",children:"SwaggerUiProviderOptions"}),"\n",(0,s.jsx)(i.p,{children:"The provider accepts configuration options that control both the API documentation and UI presentation."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:"interface SwaggerUiProviderOptions {\n  api: SwaggerUiProviderApiOptions;\n  ui?: SwaggerUiProviderUiOptions;\n}\n"})}),"\n",(0,s.jsx)(i.h4,{id:"swaggeruiproviderapioptions",children:"SwaggerUiProviderApiOptions"}),"\n",(0,s.jsx)(i.p,{children:"Controls the OpenAPI specification and API endpoint configuration."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:"interface SwaggerUiProviderApiOptions {\n  openApiObject: OpenApi3Dot1Object;\n  path: string;\n}\n"})}),"\n",(0,s.jsx)(i.p,{children:"Properties"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"openApiObject (OpenApi3Dot1Object): The base OpenAPI 3.1 specification object. Controller metadata will be merged into this object."}),"\n",(0,s.jsx)(i.li,{children:"path (string): The base path where the Swagger UI will be served (e.g., '/docs')."}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"swaggeruiprovideruioptions",children:"SwaggerUiProviderUiOptions"}),"\n",(0,s.jsx)(i.p,{children:"Controls the Swagger UI presentation and customization options."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:"interface SwaggerUiProviderUiOptions {\n  customCss?: string;\n  customCssUrls?: string | string[];\n  customJs?: string;\n  customJsUrls?: string | string[];\n  explorerEnabled?: boolean;\n  swaggerUiOptions?: SwaggerUiOptions;\n  title?: string;\n}\n"})}),"\n",(0,s.jsx)(i.p,{children:"Properties"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"customCss (optional string): Inline CSS to customize the Swagger UI appearance."}),"\n",(0,s.jsx)(i.li,{children:"customCssUrls (optional string | string[]): External CSS stylesheet URLs to include."}),"\n",(0,s.jsx)(i.li,{children:"customJs (optional string): Inline JavaScript code to execute in the Swagger UI."}),"\n",(0,s.jsx)(i.li,{children:"customJsUrls (optional string | string[]): External JavaScript URLs to include."}),"\n",(0,s.jsx)(i.li,{children:"explorerEnabled (optional boolean): Whether to show the API explorer input in the top bar. Defaults to false."}),"\n",(0,s.jsx)(i.li,{children:"swaggerUiOptions (optional SwaggerUiOptions): Native Swagger UI configuration options."}),"\n",(0,s.jsx)(i.li,{children:"title (optional string): Custom page title for the Swagger UI interface."}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"internal-processing",children:"Internal Processing"}),"\n",(0,s.jsx)(i.h3,{id:"metadata-collection",children:"Metadata Collection"}),"\n",(0,s.jsx)(i.p,{children:"The provider automatically collects metadata from your controllers including:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Controller base paths and OpenAPI metadata"}),"\n",(0,s.jsx)(i.li,{children:"Method-level route definitions and OpenAPI operations"}),"\n",(0,s.jsx)(i.li,{children:"Referenced schema types for request/response bodies"}),"\n",(0,s.jsx)(i.li,{children:"Applied middleware and guard configurations"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"openapi-specification-building",children:"OpenAPI Specification Building"}),"\n",(0,s.jsx)(i.p,{children:"The provider performs several key operations:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Merges controller metadata into the base OpenAPI object"}),"\n",(0,s.jsx)(i.li,{children:"Builds path item objects for each controller method"}),"\n",(0,s.jsx)(i.li,{children:"Consolidates referenced schemas into the components section"}),"\n",(0,s.jsx)(i.li,{children:"Maps HTTP methods to OpenAPI operations"}),"\n",(0,s.jsx)(i.li,{children:"Resolves path parameters and request/response schemas"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"controller-registration",children:"Controller Registration"}),"\n",(0,s.jsx)(i.p,{children:"After building the complete OpenAPI specification, the provider:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Creates a framework-specific Swagger UI controller"}),"\n",(0,s.jsx)(i.li,{children:"Registers the controller in the dependency injection container"}),"\n",(0,s.jsxs)(i.li,{children:["Sets up routes for serving the Swagger UI interface and static assets:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"GET {path}"}),": Serves the Swagger UI HTML page"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"GET {path}/spec"}),": Serves a JSON representation of the OpenAPI spec"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(i.h3,{id:"duplicate-operations",children:"Duplicate Operations"}),"\n",(0,s.jsx)(i.p,{children:"The provider will throw an error if duplicate operations are detected for the same path and HTTP method combination. This typically occurs when:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Multiple methods in the same controller use the same route path and HTTP method"}),"\n",(0,s.jsx)(i.li,{children:"Controller metadata conflicts exist"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"provision-state",children:"Provision State"}),"\n",(0,s.jsx)(i.p,{children:"The provider maintains internal state to prevent multiple provisioning:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Calling ",(0,s.jsx)(i.code,{children:"provide()"})," more than once will throw an error"]}),"\n",(0,s.jsx)(i.li,{children:"This ensures consistency and prevents duplicate controller registrations"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"integration-requirements",children:"Integration Requirements"}),"\n",(0,s.jsx)(i.h3,{id:"controller-prerequisites",children:"Controller Prerequisites"}),"\n",(0,s.jsx)(i.p,{children:"Controllers must meet the following requirements for proper documentation generation:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Be registered in the Inversify container"}),"\n",(0,s.jsx)(i.li,{children:"Have appropriate OpenAPI decorators applied (from the OpenAPI decorator library)"}),"\n",(0,s.jsx)(i.li,{children:"Use consistent path definitions between HTTP route decorators and OpenAPI metadata"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"framework-compatibility",children:"Framework Compatibility"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"SwaggerUiProvider"})," is an abstract class that requires framework-specific implementations. Each supported HTTP framework (Express, Fastify, Hono) has its own concrete provider implementation that handles framework-specific response handling and static file serving:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"SwaggerUiExpressProvider"})," from ",(0,s.jsx)(i.code,{children:"@inversifyjs/express-open-api"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"SwaggerUiExpress4Provider"})," from ",(0,s.jsx)(i.code,{children:"@inversifyjs/express-4-open-api"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"SwaggerUiFastifyProvider"})," from ",(0,s.jsx)(i.code,{children:"@inversifyjs/fastify-open-api"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"SwaggerUiHonoProvider"})," from ",(0,s.jsx)(i.code,{children:"@inversifyjs/hono-open-api"})]}),"\n"]})]})}function p(e={}){let{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);